# Email
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}

# JPA (운영 안정성: none 사용)
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# logging
logging.level.org.springframework.security=INFO

# MySQL
spring.datasource.url=jdbc:mysql://${PROD_DB_HOST}:3306/pcgear?allowPublicKeyRetrieval=true&useSSL=true
spring.datasource.username=${PROD_DB_USERNAME}
spring.datasource.password=${PROD_DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# Spring security
spring.security.user.name=${ADMIN_USERNAME}
spring.security.user.password=${ADMIN_PASSWORD}

# Secret Keys, Urls
recaptcha.secret-key=${RECAPTCHA_SECRET_KEY}
portone.api.secret=${PORTONE_API_SECRET}
portone.webhook.secret=${PORTONE_WEBHOOK_SECRET}
coolsms.secret=${COOLSMS_SECRET}
portone.webhook-url=${PROD_DOMAIN}
delivery-tracker.webhook-url=${PROD_DOMAIN}


# OAUTH2 (민감 정보 환경 변수 처리)
spring.profiles.include=oauth
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email